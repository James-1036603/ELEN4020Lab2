
@misc{utexas_getting_nodate,
	type = {Getting started with {OpenMP}},
	title = {Getting started with {OpenMP}},
	url = {http://pages.tacc.utexas.edu/~eijkhout/pcse/html/omp-basics.html#TheOpenMPmodel},
	abstract = {This chapter explains the basic concepts of OpenMP, and helps you get started on running your first OpenMP program.},
	urldate = {2019-03-17},
	author = {{utexas}}
}

@misc{noauthor_-place_2019,
	title = {In-place matrix transposition},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=In-place_matrix_transposition&oldid=879729488},
	abstract = {In-place matrix transposition, also called in-situ matrix transposition, is the problem of transposing an N×M matrix in-place in computer memory, ideally with O(1) (bounded) additional storage, or at most with additional storage much less than NM.  Typically, the matrix is assumed to be stored in row-major order or column-major order (i.e., contiguous rows or columns, respectively, arranged consecutively).
Performing an in-place transpose (in-situ transpose) is most difficult when N ≠ M, i.e. for a non-square (rectangular) matrix, where it involves a complicated permutation of the data elements, with many cycles of length greater than 2.  In contrast, for a square matrix (N = M), all of the cycles are of length 1 or 2, and the transpose can be achieved by a simple loop to swap the upper triangle of the matrix with the lower triangle.  Further complications arise if one wishes to maximize memory locality in order to improve cache line utilization or to operate out-of-core (where the matrix does not fit into main memory), since transposes inherently involve non-consecutive memory accesses.
The problem of non-square in-place transposition has been studied since at least the late 1950s, and several algorithms are known, including several which attempt to optimize locality for cache, out-of-core, or similar memory-related contexts.},
	language = {en},
	urldate = {2019-03-17},
	journal = {Wikipedia},
	month = jan,
	year = {2019},
	note = {Page Version ID: 879729488},
	file = {Snapshot:C\:\\Users\\DrDoom.DrDoom-PC\\Zotero\\storage\\8AJFQLFQ\\index.html:text/html}
}

@misc{learn_c_c_nodate,
	title = {C {Program} to {Find} {Transpose} of a {Matrix}},
	url = {https://www.programiz.com/c-programming/examples/matrix-transpose},
	abstract = {This program takes a matrix of order r*c from the user and computes the transpose of that matrix},
	urldate = {2019-03-17},
	journal = {Learn C},
	author = {{Learn C}}
}

@misc{thompson_2011, 
    title={False Sharing - DZone Java}, url={https://dzone.com/articles/false-sharing}, journal={dzone.com}, author={Thompson, Martin}, year={2011}, month={Aug}}


